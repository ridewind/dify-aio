[supervisord]
nodaemon=true
logfile=/dev/null
logfile_maxbytes=0
pidfile=/tmp/supervisord.pid

[unix_http_server]
file=/tmp/supervisor.sock
chmod=0700

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[eventlistener:stdout]
command = supervisor_stdout
buffer_size = 100
events = PROCESS_LOG
result_handler = supervisor_stdout:event_handler
stdout_logfile = NONE
stderr_logfile = NONE

; ——— Redis 服务 ———
[program:redis]
directory=/data
command=/bin/bash -c "\
    redis-entrypoint.sh redis-server --requirepass ${REDIS_PASSWORD:-difyai123456}"
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE

[program:postgres]
command=/bin/bash -c "\
    docker-entrypoint.sh postgres -D \"$PGDATA\" \
      -c \"max_connections=${POSTGRES_MAX_CONNECTIONS:-100}\" \
      -c \"shared_buffers=${POSTGRES_SHARED_BUFFERS:-128MB}\" \
      -c \"work_mem=${POSTGRES_WORK_MEM:-4MB}\" \
      -c \"maintenance_work_mem=${POSTGRES_MAINTENANCE_WORK_MEM:-64MB}\" \
      -c \"effective_cache_size=${POSTGRES_EFFECTIVE_CACHE_SIZE:-4096MB}\""
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE

[program:api]
directory=/app/api
command=/bin/bash -c "\
  until pg_isready -h localhost -p 5432 -U ${PGUSER:-postgres}; do \
    echo \"Waiting for postgres...\"; sleep 1; \
  done; \
  until redis-cli -h localhost -p ${REDIS_PORT:-6379} -a ${REDIS_PASSWORD:-difyai123456} ping | grep -q PONG; do \
    echo 'Waiting for redis...'; sleep 1; \
  done; \
  MODE=api /app/api/entrypoint.sh"
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE

[program:worker]
directory=/app/api
command=/bin/bash -c "\
  until pg_isready -h localhost -p 5432 -U ${PGUSER:-postgres}; do \
    echo \"Waiting for postgres...\"; sleep 1; \
  done; \
  until redis-cli -h localhost -p ${REDIS_PORT:-6379} -a ${REDIS_PASSWORD:-difyai123456} ping | grep -q PONG; do \
    echo 'Waiting for redis...'; sleep 1; \
  done; \
  MODE=worker /app/api/entrypoint.sh"
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE

[program:web]
directory=/app/web
command=/bin/sh ./entrypoint.sh
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE

[program:sandbox]
directory=/app/sandbox
command=/app/sandbox/main
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE


[program:plugin-daemon]
directory=/app/plugin-daemon
command=/bin/bash -c "\
  until pg_isready -h localhost -p 5432 -U ${PGUSER:-postgres}; do \
    echo \"Waiting for postgres...\"; sleep 1; \
  done; \
  until redis-cli -h localhost -p ${REDIS_PORT:-6379} -a ${REDIS_PASSWORD:-difyai123456} ping | grep -q PONG; do \
    echo 'Waiting for redis...'; sleep 1; \
  done; \
  exec /app/plugin-daemon/main"
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE

[program:weaviate]
directory=/app/weaviate
command=/bin/weaviate --host 0.0.0.0 --port 8080 --scheme http
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE

[program:nginx]
command=/etc/nginx/docker-entrypoint.sh
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE

[program:sshd]
command=/usr/sbin/sshd -D
autostart=true
autorestart=true
stdout_events_enabled = true
stderr_events_enabled = true
stdout_logfile = NONE
stderr_logfile = NONE